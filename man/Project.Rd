% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Project.R
\name{Project}
\alias{Project}
\title{Project
class representing the basic properties of a CorrelAid Project}
\description{
Project
class representing the basic properties of a CorrelAid Project

Project
class representing the basic properties of a CorrelAid Project
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{tags}}{tibble. Returns the tags of the project as a tibble. Read-only.}

\item{\code{local_chapters}}{tibble. Returns the local_chapters of the project as a tibble. Read-only.}

\item{\code{project_members}}{tibble. Returns the project_members of the project as a tibble. Read-only.}

\item{\code{project_id}}{character. id of the project, in the form YYYY-mm-ABB where ABB is any three-character, uppercase abbreviation}

\item{\code{name}}{character. title of the project.}

\item{\code{status_id}}{integer. Returns integer corresponding to the status of the project. Check out
projectutils::status to see the available status and the corresponding ids.}

\item{\code{slug}}{character. Returns or sets the slug (the part of the URL after correlaid.org/projects) for the website. Must not contain spaces and only - as special characters.}

\item{\code{is_public}}{boolean. Returns or sets whether the project is made public on the CorrelAid website. Use with caution!}

\item{\code{start_ym}}{character. Return or set the start of the project, in YYYY-mm form. Does not change the project id.}

\item{\code{end_ym}}{character. Return or set the actual end of the project, in YYYY-mm form.}

\item{\code{end_ym_predicted}}{character. Return or set the predicted end of the project, in YYYY-mm form.}

\item{\code{is_internal}}{boolean. Return or set whether or not the project is an internal project.}

\item{\code{url_git_repo}}{character. Return or set the full URL of the git repository, either GitHub or Gitlab.}

\item{\code{url_gh_issue}}{character. Returns the full URL to the GitHub issue in the projects repository. To set, pass the issue number as an integer.}

\item{\code{url_pad}}{character. Returns or sets the full URL to the CodiMD Pad for the project.}

\item{\code{slack_channel}}{character. Returns or sets the name of the Slack channel for the project.}

\item{\code{organization_id}}{integer. Returns or sets the integer corresponding to the partner organization of the project.
create a project}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Project$new()}}
\item \href{#method-add_tag}{\code{Project$add_tag()}}
\item \href{#method-add_local_chapter}{\code{Project$add_local_chapter()}}
\item \href{#method-add_project_member}{\code{Project$add_project_member()}}
\item \href{#method-set_status}{\code{Project$set_status()}}
\item \href{#method-to_tibble}{\code{Project$to_tibble()}}
\item \href{#method-get_sql_tables}{\code{Project$get_sql_tables()}}
\item \href{#method-clone}{\code{Project$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$new(project_id, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{project_id}}{character. id of the project, in the form YYYY-mm-ABB where ABB is any three-character, uppercase abbreviation}

\item{\code{name}}{character. Short title of the project.
add a new tag to the project}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_tag"></a>}}
\if{latex}{\out{\hypertarget{method-add_tag}{}}}
\subsection{Method \code{add_tag()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$add_tag(category, value = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{category}}{character. the tag category. see projectutils::tags for available values.}

\item{\code{value}}{character. the tag value. see projectutils::tags for available values and combinations. Defaults to NA.
add a local chapter to the project}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_local_chapter"></a>}}
\if{latex}{\out{\hypertarget{method-add_local_chapter}{}}}
\subsection{Method \code{add_local_chapter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$add_local_chapter(lc_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{lc_name}}{character. local chapter name. see projectutils::local_chapters for available options.
add a local chapter to the project}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_project_member"></a>}}
\if{latex}{\out{\hypertarget{method-add_project_member}{}}}
\subsection{Method \code{add_project_member()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$add_project_member(volunteer_id, role)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{volunteer_id}}{integer. id of the volunteer.}

\item{\code{role}}{character. role of the volunteer. see projectutils::roles for available options.
set status of the project}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_status"></a>}}
\if{latex}{\out{\hypertarget{method-set_status}{}}}
\subsection{Method \code{set_status()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$set_status(status)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{status}}{character. the status. See projectutils::status for options.
to_tibble}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-to_tibble}{}}}
\subsection{Method \code{to_tibble()}}{
returns a one row tibble representation of the Project object.
get_sql_tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$to_tibble()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_sql_tables"></a>}}
\if{latex}{\out{\hypertarget{method-get_sql_tables}{}}}
\subsection{Method \code{get_sql_tables()}}{
function that returns a tibble for each table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$get_sql_tables()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Project$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
